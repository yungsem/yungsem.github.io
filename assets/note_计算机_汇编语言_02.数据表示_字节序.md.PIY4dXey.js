import{_ as a,c as e,o as t,a4 as o}from"./chunks/framework.4aTu-Nia.js";const s="/assets/%E5%B0%8F%E7%AB%AF%E5%BA%8F.drawio.Ni5UTAMy.svg",r="/assets/%E5%A4%A7%E7%AB%AF%E5%BA%8F.drawio.KYJKkC2f.svg",u=JSON.parse('{"title":"字节序","description":"","frontmatter":{},"headers":[],"relativePath":"note/计算机/汇编语言/02.数据表示/字节序.md","filePath":"note/计算机/汇编语言/02.数据表示/字节序.md"}'),_={name:"note/计算机/汇编语言/02.数据表示/字节序.md"},c=o('<h1 id="字节序" tabindex="-1">字节序 <a class="header-anchor" href="#字节序" aria-label="Permalink to &quot;字节序&quot;">​</a></h1><h2 id="小端序" tabindex="-1">小端序 <a class="header-anchor" href="#小端序" aria-label="Permalink to &quot;小端序&quot;">​</a></h2><p>多个字节组成的字节序列在内存中以 <code>小端序</code> 的规范存储。即各个字节从高地址往低地址依次存放（从上往下）。如 0x225 ，长度是两个字节，它在内存中的存放方式如下：</p><p><img src="'+s+'" alt=""></p><h2 id="大端序" tabindex="-1">大端序 <a class="header-anchor" href="#大端序" aria-label="Permalink to &quot;大端序&quot;">​</a></h2><p>但是在寄存器中，字节序列是以 <code>大端序</code> 的规范存储的。即各个字节从低位往高位依次存放（从右往左）。还是以 0x225 为例，它在寄存器中的存储方式如下：</p><p><img src="'+r+'" alt=""></p>',7),i=[c];function n(d,l,h,p,m,f){return t(),e("div",null,i)}const x=a(_,[["render",n]]);export{u as __pageData,x as default};
