import{_ as t,c as e,o as n,a4 as r}from"./chunks/framework.4aTu-Nia.js";const b=JSON.parse('{"title":"数据长度","description":"","frontmatter":{},"headers":[],"relativePath":"note/计算机/汇编语言/02.数据表示/数据长度.md","filePath":"note/计算机/汇编语言/02.数据表示/数据长度.md"}'),a={name:"note/计算机/汇编语言/02.数据表示/数据长度.md"},d=r('<h1 id="数据长度" tabindex="-1">数据长度 <a class="header-anchor" href="#数据长度" aria-label="Permalink to &quot;数据长度&quot;">​</a></h1><p>数据在计算机中都是以二进制的 0/1 串表示的。这些二进制的 0/1 串按照长度分成了多个类别。x86-64 架构支持以下 5 个类别的长度：</p><table><thead><tr><th style="text-align:center;"><strong>类别</strong></th><th style="text-align:center;"><strong>长度（字节）</strong></th><th style="text-align:center;"><strong>长度（位）</strong></th></tr></thead><tbody><tr><td style="text-align:center;">byte</td><td style="text-align:center;">1 byte</td><td style="text-align:center;">8 bits</td></tr><tr><td style="text-align:center;">word</td><td style="text-align:center;">2 bytes</td><td style="text-align:center;">16 bits</td></tr><tr><td style="text-align:center;">doubleword</td><td style="text-align:center;">4 bytes</td><td style="text-align:center;">32 bits</td></tr><tr><td style="text-align:center;">quadword</td><td style="text-align:center;">8 bytes</td><td style="text-align:center;">64 bits</td></tr><tr><td style="text-align:center;">double quadword</td><td style="text-align:center;">16 bytes</td><td style="text-align:center;">128 bits</td></tr></tbody></table>',3),s=[d];function l(o,i,c,_,y,g){return n(),e("div",null,s)}const h=t(a,[["render",l]]);export{b as __pageData,h as default};
